{
  "MonitoredResourceListResponse": {
    "type": "object",
    "properties": {
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/MonitoredResource"
        },
        "x-cadl-name": "MonitoredResource[]",
        "description": "The items on this page"
      },
      "nextLink": {
        "type": "string",
        "description": "The link to the next page of items"
      }
    },
    "description": "List of all the resources being monitored by Dynatrace monitor resource"
  },
  "MonitorResourceUpdate": {
    "type": "object",
    "properties": {
      "tags": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Resource tags.",
        "x-ms-mutability": [
          "read",
          "update",
          "create"
        ]
      },
      "monitoringStatus": {
        "$ref": "#/definitions/MonitoringStatus",
        "description": "Status of the monitor."
      },
      "marketplaceSubscriptionStatus": {
        "$ref": "#/definitions/MarketplaceSubscriptionStatus",
        "description": "Marketplace subscription status."
      },
      "dynatraceEnvironmentProperties": {
        "$ref": "#/definitions/DynatraceEnvironmentProperties",
        "description": "Properties of the Dynatrace environment."
      },
      "userInfo": {
        "$ref": "#/definitions/UserInfo",
        "description": "User info."
      },
      "planData": {
        "$ref": "#/definitions/PlanData",
        "description": "Billing plan information."
      }
    },
    "description": "The updatable properties of the MonitorResource."
  },
  "AccountInfoSecure": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "Account Id of the account this environment is linked to",
        "readOnly": true
      },
      "apiKey": {
        "$ref": "#/definitions/SecureString",
        "description": "API Key of the user account",
        "readOnly": true
      },
      "regionId": {
        "type": "string",
        "description": "Region in which the account is created",
        "readOnly": true
      }
    },
    "description": "Dynatrace account API Key"
  },
  "VMExtensionPayload": {
    "type": "object",
    "properties": {
      "ingestionKey": {
        "type": "string",
        "description": "Ingestion key of the environment"
      },
      "environmentId": {
        "type": "string",
        "description": "Id of the environment created"
      }
    },
    "description": "Response of payload to be passed while installing VM agent."
  },
  "VMHostsListResponse": {
    "type": "object",
    "properties": {
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/VMInfo"
        },
        "description": "The items on this page",
        "x-ms-identifiers": []
      },
      "nextLink": {
        "type": "string",
        "description": "The link to the next page of items"
      }
    },
    "description": "Response of a list VM Host Operation."
  },
  "AppServiceInfo": {
    "type": "object",
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "App service resource ID"
      },
      "version": {
        "type": "string",
        "description": "Version of the Dynatrace agent installed on the App Service."
      },
      "monitoringType": {
        "$ref": "#/definitions/MonitoringType",
        "description": "The monitoring mode of OneAgent"
      },
      "autoUpdateSetting": {
        "$ref": "#/definitions/AutoUpdateSetting",
        "description": "Update settings of OneAgent."
      },
      "updateStatus": {
        "$ref": "#/definitions/UpdateStatus",
        "description": "The current update status of OneAgent."
      },
      "availabilityState": {
        "$ref": "#/definitions/AvailabilityState",
        "description": "The availability state of OneAgent."
      },
      "logModule": {
        "$ref": "#/definitions/LogModule",
        "description": "Tells whether log modules are enabled or not"
      },
      "hostGroup": {
        "type": "string",
        "description": "The name of the host group"
      },
      "hostName": {
        "type": "string",
        "description": "The name of the host"
      }
    },
    "description": "Details of App Services having Dynatrace OneAgent installed"
  },
  "AppServiceListResponse": {
    "type": "object",
    "properties": {
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/AppServiceInfo"
        },
        "description": "The items on this page",
        "x-ms-identifiers": []
      },
      "nextLink": {
        "type": "string",
        "description": "The link to the next page of items"
      }
    },
    "description": "Response of a list App Services Operation."
  },
  "MonitorResource": {
    "type": "object",
    "properties": {
      "properties": {
        "$ref": "#/definitions/MonitorProperties",
        "description": "The resource-specific properties for this resource.",
        "x-ms-mutability": [
          "read",
          "create"
        ],
        "x-ms-client-flatten": true
      },
      "systemData": {
        "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
        "description": "System metadata for this resource.",
        "readOnly": true
      },
      "identity": {
        "$ref": "#/definitions/IdentityProperties",
        "description": "The managed service identities assigned to this resource."
      }
    },
    "description": "Dynatrace Monitor Resource",
    "required": [
      "properties"
    ],
    "allOf": [
      {
        "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
      }
    ]
  },
  "MonitorResourceListResult": {
    "type": "object",
    "properties": {
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/MonitorResource"
        },
        "x-cadl-name": "Dynatrace.Observability.MonitorResource[]",
        "description": "The items on this page"
      },
      "nextLink": {
        "type": "string",
        "description": "The link to the next page of items"
      }
    },
    "description": "The response of a MonitorResource list operation.",
    "required": [
      "value"
    ]
  },
  "TagRule": {
    "type": "object",
    "properties": {
      "properties": {
        "$ref": "#/definitions/MonitoringTagRulesProperties",
        "description": "The resource-specific properties for this resource.",
        "x-ms-mutability": [
          "read",
          "create"
        ],
        "x-ms-client-flatten": true
      },
      "systemData": {
        "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
        "description": "System metadata for this resource.",
        "readOnly": true
      }
    },
    "description": "Tag rules for a monitor resource",
    "required": [
      "properties"
    ],
    "allOf": [
      {
        "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
      }
    ]
  },
  "TagRuleUpdate": {
    "type": "object",
    "properties": {
      "logRules": {
        "$ref": "#/definitions/LogRules",
        "description": "Set of rules for sending logs for the Monitor resource."
      },
      "metricRules": {
        "$ref": "#/definitions/MetricRules",
        "description": "Set of rules for sending metrics for the Monitor resource."
      }
    },
    "description": "The updatable properties of the TagRule."
  },
  "TagRuleListResult": {
    "type": "object",
    "properties": {
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TagRule"
        },
        "x-cadl-name": "Dynatrace.Observability.TagRule[]",
        "description": "The items on this page"
      },
      "nextLink": {
        "type": "string",
        "description": "The link to the next page of items"
      }
    },
    "description": "The response of a TagRule list operation.",
    "required": [
      "value"
    ]
  },
  "DynatraceSingleSignOnResource": {
    "type": "object",
    "properties": {
      "properties": {
        "$ref": "#/definitions/DynatraceSingleSignOnProperties",
        "description": "The resource-specific properties for this resource.",
        "x-ms-mutability": [
          "read",
          "create"
        ],
        "x-ms-client-flatten": true
      },
      "systemData": {
        "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
        "description": "System metadata for this resource.",
        "readOnly": true
      }
    },
    "description": "Single sign-on configurations for a given monitor resource.",
    "required": [
      "properties"
    ],
    "allOf": [
      {
        "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
      }
    ]
  },
  "DynatraceSingleSignOnResourceListResult": {
    "type": "object",
    "properties": {
      "value": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/DynatraceSingleSignOnResource"
        },
        "x-cadl-name": "Dynatrace.Observability.DynatraceSingleSignOnResource[]",
        "description": "The items on this page"
      },
      "nextLink": {
        "type": "string",
        "description": "The link to the next page of items"
      }
    },
    "description": "The response of a DynatraceSingleSignOnResource list operation.",
    "required": [
      "value"
    ]
  },
  "SecureString": {
    "type": "string",
    "format": "password",
    "x-ms-secret": true,
    "description": "Credential string."
  },
  "MonitoredResource": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The ARM id of the resource."
      },
      "sendingMetrics": {
        "$ref": "#/definitions/SendingMetricsStatus",
        "description": "Flag indicating if resource is sending metrics to Dynatrace."
      },
      "reasonForMetricsStatus": {
        "type": "string",
        "description": "Reason for why the resource is sending metrics (or why it is not sending)."
      },
      "sendingLogs": {
        "$ref": "#/definitions/SendingLogsStatus",
        "description": "Flag indicating if resource is sending logs to Dynatrace."
      },
      "reasonForLogsStatus": {
        "type": "string",
        "description": "Reason for why the resource is sending logs (or why it is not sending)."
      }
    },
    "description": "Details of resource being monitored by Dynatrace monitor resource"
  },
  "VMInfo": {
    "type": "object",
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "Azure VM resource ID"
      },
      "version": {
        "type": "string",
        "description": "Version of the Dynatrace agent installed on the VM."
      },
      "monitoringType": {
        "$ref": "#/definitions/MonitoringType",
        "description": "The monitoring mode of OneAgent"
      },
      "autoUpdateSetting": {
        "$ref": "#/definitions/AutoUpdateSetting",
        "description": "Update settings of OneAgent."
      },
      "updateStatus": {
        "$ref": "#/definitions/UpdateStatus",
        "description": "The current update status of OneAgent."
      },
      "availabilityState": {
        "$ref": "#/definitions/AvailabilityState",
        "description": "The availability state of OneAgent."
      },
      "logModule": {
        "$ref": "#/definitions/LogModule",
        "description": "Tells whether log modules are enabled or not"
      },
      "hostGroup": {
        "type": "string",
        "description": "The name of the host group"
      },
      "hostName": {
        "type": "string",
        "description": "The name of the host"
      }
    },
    "description": "Details of VM Resource having Dynatrace OneAgent installed"
  },
  "MonitoringType": {
    "type": "string",
    "description": "The monitoring mode of OneAgent",
    "enum": [
      "CLOUD_INFRASTRUCTURE",
      "FULL_STACK"
    ],
    "x-ms-enum": {
      "name": "MonitoringType",
      "modelAsString": true
    }
  },
  "AutoUpdateSetting": {
    "type": "string",
    "description": "Update settings of OneAgent.",
    "enum": [
      "ENABLED",
      "DISABLED"
    ],
    "x-ms-enum": {
      "name": "AutoUpdateSetting",
      "modelAsString": true
    }
  },
  "UpdateStatus": {
    "type": "string",
    "description": "The current update status of OneAgent.",
    "enum": [
      "INCOMPATIBLE",
      "OUTDATED",
      "SCHEDULED",
      "SUPPRESSED",
      "UNKNOWN",
      "UP2DATE",
      "UPDATE_IN_PROGRESS",
      "UPDATE_PENDING",
      "UPDATE_PROBLEM"
    ],
    "x-ms-enum": {
      "name": "UpdateStatus",
      "modelAsString": true
    }
  },
  "AvailabilityState": {
    "type": "string",
    "description": "The availability state of OneAgent.",
    "enum": [
      "CRASHED",
      "LOST",
      "MONITORED",
      "PRE_MONITORED",
      "SHUTDOWN",
      "UNEXPECTED_SHUTDOWN",
      "UNKNOWN",
      "UNMONITORED"
    ],
    "x-ms-enum": {
      "name": "AvailabilityState",
      "modelAsString": true
    }
  },
  "LogModule": {
    "type": "string",
    "description": "Tells whether log modules are enabled or not",
    "enum": [
      "ENABLED",
      "DISABLED"
    ],
    "x-ms-enum": {
      "name": "LogModule",
      "modelAsString": true
    }
  },
  "MonitorProperties": {
    "type": "object",
    "properties": {
      "monitoringStatus": {
        "$ref": "#/definitions/MonitoringStatus",
        "description": "Status of the monitor."
      },
      "marketplaceSubscriptionStatus": {
        "$ref": "#/definitions/MarketplaceSubscriptionStatus",
        "description": "Marketplace subscription status."
      },
      "dynatraceEnvironmentProperties": {
        "$ref": "#/definitions/DynatraceEnvironmentProperties",
        "description": "Properties of the Dynatrace environment."
      },
      "userInfo": {
        "$ref": "#/definitions/UserInfo",
        "description": "User info."
      },
      "planData": {
        "$ref": "#/definitions/PlanData",
        "description": "Billing plan information."
      },
      "liftrResourceCategory": {
        "$ref": "#/definitions/LiftrResourceCategories",
        "description": "Liftr Resource category.",
        "readOnly": true
      },
      "liftrResourcePreference": {
        "type": "integer",
        "format": "int32",
        "description": "The priority of the resource.",
        "readOnly": true
      },
      "provisioningState": {
        "$ref": "#/definitions/ProvisioningState",
        "description": "Provisioning state of the resource.",
        "readOnly": true
      }
    },
    "description": "Properties specific to the monitor resource."
  },
  "IdentityProperties": {
    "type": "object",
    "properties": {
      "tenantId": {
        "type": "string",
        "description": "The Active Directory tenant id of the principal.",
        "readOnly": true
      },
      "principalId": {
        "type": "string",
        "description": "The active directory identifier of this principal.",
        "readOnly": true
      },
      "type": {
        "$ref": "#/definitions/ManagedIdentityType",
        "description": "The type of managed identity assigned to this resource."
      },
      "userAssignedIdentities": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/UserAssignedIdentity"
        },
        "description": "The identities assigned to this resource by the user."
      }
    },
    "description": "The properties of the managed service identities assigned to this resource.",
    "required": [
      "type"
    ]
  },
  "MonitoringStatus": {
    "type": "string",
    "description": "Flag specifying if the resource monitoring is enabled or disabled.",
    "enum": [
      "Enabled",
      "Disabled"
    ],
    "x-ms-enum": {
      "name": "MonitoringStatus",
      "modelAsString": true
    }
  },
  "MarketplaceSubscriptionStatus": {
    "type": "string",
    "description": "Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.",
    "enum": [
      "Active",
      "Suspended"
    ],
    "x-ms-enum": {
      "name": "MarketplaceSubscriptionStatus",
      "modelAsString": true
    }
  },
  "DynatraceEnvironmentProperties": {
    "type": "object",
    "properties": {
      "userId": {
        "type": "string",
        "description": "User id"
      },
      "accountInfo": {
        "$ref": "#/definitions/AccountInfo",
        "description": "Dynatrace Account Information"
      },
      "environmentInfo": {
        "$ref": "#/definitions/EnvironmentInfo",
        "description": "Dynatrace Environment Information"
      },
      "singleSignOnProperties": {
        "$ref": "#/definitions/DynatraceSingleSignOnProperties",
        "description": "The details of a Dynatrace single sign-on."
      }
    },
    "description": "Properties of the Dynatrace environment."
  },
  "UserInfo": {
    "type": "object",
    "properties": {
      "firstName": {
        "type": "string",
        "description": "First Name of the user"
      },
      "lastName": {
        "type": "string",
        "description": "Last Name of the user"
      },
      "emailAddress": {
        "$ref": "#/definitions/email",
        "description": "Email of the user used by Dynatrace for contacting them if needed"
      },
      "phoneNumber": {
        "type": "string",
        "maxLength": 40,
        "description": "Phone number of the user used by Dynatrace for contacting them if needed"
      },
      "country": {
        "type": "string",
        "description": "Country of the user"
      }
    },
    "description": "User info."
  },
  "PlanData": {
    "type": "object",
    "properties": {
      "usageType": {
        "type": "string",
        "description": "different usage type like PAYG/COMMITTED. this could be enum"
      },
      "billingCycle": {
        "type": "string",
        "description": "different billing cycles like MONTHLY/WEEKLY. this could be enum"
      },
      "planDetails": {
        "type": "string",
        "description": "plan id as published by Dynatrace"
      },
      "effectiveDate": {
        "type": "string",
        "format": "date-time",
        "description": "date when plan was applied"
      }
    },
    "description": "Billing plan information."
  },
  "MonitoringTagRulesProperties": {
    "type": "object",
    "properties": {
      "logRules": {
        "$ref": "#/definitions/LogRules",
        "description": "Set of rules for sending logs for the Monitor resource."
      },
      "metricRules": {
        "$ref": "#/definitions/MetricRules",
        "description": "Set of rules for sending metrics for the Monitor resource."
      },
      "provisioningState": {
        "$ref": "#/definitions/ProvisioningState",
        "description": "Provisioning state of the resource.",
        "readOnly": true
      }
    },
    "description": "Properties for the Tag rules resource of a Monitor account."
  },
  "LogRules": {
    "type": "object",
    "properties": {
      "sendAadLogs": {
        "$ref": "#/definitions/SendAadLogsStatus",
        "description": "Flag specifying if AAD logs should be sent for the Monitor resource."
      },
      "sendSubscriptionLogs": {
        "$ref": "#/definitions/SendSubscriptionLogsStatus",
        "description": "Flag specifying if subscription logs should be sent for the Monitor resource."
      },
      "sendActivityLogs": {
        "$ref": "#/definitions/SendActivityLogsStatus",
        "description": "Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."
      },
      "filteringTags": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilteringTag"
        },
        "x-cadl-name": "FilteringTag[]",
        "x-ms-identifiers": [],
        "description": "List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured.\nIf only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."
      }
    },
    "description": "Set of rules for sending logs for the Monitor resource."
  },
  "MetricRules": {
    "description": "Set of rules for sending metrics for the Monitor resource.",
    "type": "object",
    "properties": {
      "filteringTags": {
        "description": "List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/FilteringTag"
        },
        "x-ms-identifiers": []
      }
    }
  },
  "DynatraceSingleSignOnProperties": {
    "type": "object",
    "properties": {
      "singleSignOnState": {
        "$ref": "#/definitions/SingleSignOnStates",
        "description": "State of Single Sign On"
      },
      "enterpriseAppId": {
        "type": "string",
        "description": "Version of the Dynatrace agent installed on the VM."
      },
      "singleSignOnUrl": {
        "type": "string",
        "description": "The login URL specific to this Dynatrace Environment"
      },
      "aadDomains": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "x-cadl-name": "string[]",
        "description": "array of Aad(azure active directory) domains"
      },
      "provisioningState": {
        "$ref": "#/definitions/ProvisioningState",
        "description": "Provisioning state of the resource.",
        "readOnly": true
      }
    },
    "description": "The details of a Dynatrace single sign-on."
  },
  "SendingMetricsStatus": {
    "type": "string",
    "description": "Indicates whether metrics are being sent.",
    "enum": [
      "Enabled",
      "Disabled"
    ],
    "x-ms-enum": {
      "name": "SendingMetricsStatus",
      "modelAsString": true
    }
  },
  "SendingLogsStatus": {
    "type": "string",
    "description": "Indicates whether logs are being sent.",
    "enum": [
      "Enabled",
      "Disabled"
    ],
    "x-ms-enum": {
      "name": "SendingLogsStatus",
      "modelAsString": true
    }
  },
  "LiftrResourceCategories": {
    "type": "string",
    "description": "Liftr resource category",
    "enum": [
      "Unknown",
      "MonitorLogs"
    ],
    "x-ms-enum": {
      "name": "LiftrResourceCategories",
      "modelAsString": true
    }
  },
  "ProvisioningState": {
    "type": "string",
    "description": "Provisioning state of the monitoring resource",
    "enum": [
      "Accepted",
      "Creating",
      "Updating",
      "Deleting",
      "Succeeded",
      "Failed",
      "Canceled",
      "Deleted",
      "NotSpecified"
    ],
    "x-ms-enum": {
      "name": "ProvisioningState",
      "modelAsString": true
    }
  },
  "ManagedIdentityType": {
    "type": "string",
    "description": "The kind of managed identity assigned to this resource.",
    "enum": [
      "SystemAssigned",
      "UserAssigned",
      "SystemAndUserAssigned"
    ],
    "x-ms-enum": {
      "name": "ManagedIdentityType",
      "modelAsString": true
    }
  },
  "UserAssignedIdentity": {
    "type": "object",
    "properties": {
      "clientId": {
        "type": "string",
        "description": "The active directory client identifier for this principal."
      },
      "principalId": {
        "type": "string",
        "description": "The active directory identifier for this principal."
      }
    },
    "description": "A managed identity assigned by the user.",
    "required": [
      "clientId",
      "principalId"
    ]
  },
  "AccountInfo": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "Account Id of the account this environment is linked to"
      },
      "regionId": {
        "type": "string",
        "description": "Region in which the account is created"
      }
    },
    "description": "Dynatrace Account Information"
  },
  "EnvironmentInfo": {
    "type": "object",
    "properties": {
      "environmentId": {
        "type": "string",
        "description": "Id of the environment created"
      },
      "ingestionKey": {
        "type": "string",
        "description": "Ingestion key of the environment"
      },
      "logsIngestionEndpoint": {
        "type": "string",
        "description": "Ingestion endpoint used for sending logs"
      },
      "landingURL": {
        "type": "string",
        "description": "Landing URL for Dynatrace environment"
      }
    },
    "description": "Dynatrace Environment Information"
  },
  "LinkableEnvironmentRequest": {
    "description": "Request for getting all the linkable environments for a user",
    "type": "object",
    "properties": {
      "tenantId": {
        "type": "string",
        "description": "Tenant Id of the user in which they want to link the environment"
      },
      "userPrincipal": {
        "type": "string",
        "description": "user principal id of the user"
      },
      "region": {
        "type": "string",
        "description": "Azure region in which we want to link the environment"
      }
    }
  },
  "LinkableEnvironmentResponse": {
    "description": "Response for getting all the linkable environments",
    "type": "object",
    "properties": {
      "environmentId": {
        "type": "string",
        "description": "environment id for which user is an admin"
      },
      "environmentName": {
        "type": "string",
        "description": "Name of the environment"
      },
      "planData": {
        "$ref": "#/definitions/PlanData",
        "description": "Billing plan information."
      }
    }
  },
  "LinkableEnvironmentListResponse": {
    "description": "Response for getting all the linkable environments",
    "type": "object",
    "properties": {
      "value": {
        "description": "List of environments for which user is an admin",
        "type": "array",
        "items": {
          "$ref": "#/definitions/LinkableEnvironmentResponse"
        },
        "x-ms-identifiers": []
      },
      "nextLink": {
        "description": "Link to the next set of results, if any.",
        "type": "string"
      }
    }
  },
  "SSODetailsRequest": {
    "description": "Request for getting sso details for a user",
    "type": "object",
    "properties": {
      "userPrincipal": {
        "type": "string",
        "description": "user principal id of the user"
      }
    }
  },
  "SSODetailsResponse": {
    "type": "object",
    "properties": {
      "isSsoEnabled": {
        "$ref": "#/definitions/SSOStatus",
        "description": "Whether the SSO is enabled for this resource or not."
      },
      "metadataUrl": {
        "type": "string",
        "description": "URL for Azure AD metadata"
      },
      "singleSignOnUrl": {
        "type": "string",
        "description": "The login URL specific to this Dynatrace Environment"
      },
      "aadDomains": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "array of Aad(azure active directory) domains"
      },
      "adminUsers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of admin user emails."
      }
    },
    "description": "SSO details from the Dynatrace partner"
  },
  "SSOStatus": {
    "type": "string",
    "description": "Indicates whether SSO is enabled or not",
    "enum": [
      "Enabled",
      "Disabled"
    ],
    "x-ms-enum": {
      "name": "SSOStatus",
      "modelAsString": true
    }
  },
  "email": {
    "type": "string",
    "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$",
    "description": "Reusable representation of an email address"
  },
  "SendAadLogsStatus": {
    "type": "string",
    "description": "Indicates whether AAD logs are being sent.",
    "enum": [
      "Enabled",
      "Disabled"
    ],
    "x-ms-enum": {
      "name": "SendAadLogsStatus",
      "modelAsString": true
    }
  },
  "SendSubscriptionLogsStatus": {
    "type": "string",
    "description": "Indicates whether subscription logs are being sent.",
    "enum": [
      "Enabled",
      "Disabled"
    ],
    "x-ms-enum": {
      "name": "SendSubscriptionLogsStatus",
      "modelAsString": true
    }
  },
  "SendActivityLogsStatus": {
    "type": "string",
    "description": "Indicates whether activity logs are being sent.",
    "enum": [
      "Enabled",
      "Disabled"
    ],
    "x-ms-enum": {
      "name": "SendActivityLogsStatus",
      "modelAsString": true
    }
  },
  "FilteringTag": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "The name (also known as the key) of the tag."
      },
      "value": {
        "type": "string",
        "description": "The value of the tag."
      },
      "action": {
        "$ref": "#/definitions/TagAction",
        "description": "Valid actions for a filtering tag. Exclusion takes priority over inclusion."
      }
    },
    "description": "The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored."
  },
  "SingleSignOnStates": {
    "type": "string",
    "description": "Various states of the SSO resource",
    "enum": [
      "Initial",
      "Enable",
      "Disable",
      "Existing"
    ],
    "x-ms-enum": {
      "name": "SingleSignOnStates",
      "modelAsString": true
    }
  },
  "TagAction": {
    "type": "string",
    "description": "Valid actions for a filtering tag. Exclusion takes priority over inclusion.",
    "enum": [
      "Include",
      "Exclude"
    ],
    "x-ms-enum": {
      "name": "TagAction",
      "modelAsString": true
    }
  }
}
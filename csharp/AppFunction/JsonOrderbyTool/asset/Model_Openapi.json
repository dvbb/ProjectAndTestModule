{
  "ElasticSan": {
    "type": "object",
    "description": "Response for ElasticSan request.",
    "properties": {
      "properties": {
        "$ref": "#/definitions/ElasticSanProperties",
        "description": "The resource-specific properties for this resource.",
        "x-ms-client-flatten": true,
        "x-ms-mutability": [
          "read",
          "create"
        ]
      }
    },
    "allOf": [
      {
        "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
      }
    ]
  },
  "ElasticSanProperties": {
    "type": "object",
    "description": "Elastic San response properties.",
    "properties": {
      "sku": {
        "$ref": "#/definitions/Sku",
        "description": "resource sku"
      },
      "availabilityZones": {
        "type": "array",
        "description": "Logical zone for Elastic San resource; example: [\"1\"].",
        "items": {
          "type": "string"
        }
      },
      "provisioningState": {
        "$ref": "#/definitions/ProvisioningStates",
        "description": "State of the operation on the resource.",
        "readOnly": true
      },
      "baseSizeTiB": {
        "type": "integer",
        "format": "int32",
        "description": "Base size of the Elastic San appliance in TiB.",
        "x-ms-mutability": [
          "read",
          "create"
        ]
      },
      "extendedCapacitySizeTiB": {
        "type": "integer",
        "format": "int32",
        "description": "Extended size of the Elastic San appliance in TiB.",
        "x-ms-mutability": [
          "read",
          "create"
        ]
      },
      "totalVolumeSizeGiB": {
        "type": "integer",
        "format": "int32",
        "description": "Total size of the provisioned Volumes in GiB.",
        "readOnly": true
      },
      "volumeGroupCount": {
        "type": "integer",
        "format": "int32",
        "description": "Total number of volume groups in this Elastic San appliance.",
        "readOnly": true
      },
      "totalIops": {
        "type": "integer",
        "format": "int32",
        "description": "Total Provisioned IOPS of the Elastic San appliance.",
        "readOnly": true
      },
      "totalMBps": {
        "type": "integer",
        "format": "int32",
        "description": "Total Provisioned MBps Elastic San appliance.",
        "readOnly": true
      },
      "totalSizeTiB": {
        "type": "integer",
        "format": "int32",
        "description": "Total size of the Elastic San appliance in TB.",
        "readOnly": true
      },
      "privateEndpointConnections": {
        "type": "array",
        "description": "The list of Private Endpoint Connections.",
        "items": {
          "$ref": "#/definitions/PrivateEndpointConnection"
        },
        "readOnly": true
      },
      "publicNetworkAccess": {
        "$ref": "#/definitions/PublicNetworkAccess",
        "description": "Allow or disallow public network access to ElasticSan. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
      }
    },
    "required": [
      "sku",
      "baseSizeTiB",
      "extendedCapacitySizeTiB"
    ]
  },
  "ElasticSanUpdate": {
    "type": "object",
    "description": "Response for ElasticSan update request.",
    "properties": {
      "properties": {
        "$ref": "#/definitions/ElasticSanUpdateProperties",
        "description": "Properties of ElasticSan."
      },
      "tags": {
        "type": "object",
        "description": "Update tags",
        "additionalProperties": {
          "type": "string"
        }
      }
    }
  },
  "ElasticSanUpdateProperties": {
    "type": "object",
    "description": "Elastic San update properties.",
    "properties": {
      "baseSizeTiB": {
        "type": "integer",
        "format": "int32",
        "description": "Base size of the Elastic San appliance in TiB.",
        "x-ms-mutability": [
          "update"
        ]
      },
      "extendedCapacitySizeTiB": {
        "type": "integer",
        "format": "int32",
        "description": "Extended size of the Elastic San appliance in TiB.",
        "x-ms-mutability": [
          "update"
        ]
      },
      "publicNetworkAccess": {
        "$ref": "#/definitions/PublicNetworkAccess",
        "description": "Allow or disallow public network access to ElasticSan Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
      }
    }
  },
  "EncryptionIdentity": {
    "type": "object",
    "description": "Encryption identity for the volume group.",
    "properties": {
      "userAssignedIdentity": {
        "type": "string",
        "description": "Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.",
        "x-ms-client-name": "encryptionUserAssignedIdentity"
      }
    }
  },
  "EncryptionProperties": {
    "type": "object",
    "description": "The encryption settings on the volume group.",
    "properties": {
      "keyVaultProperties": {
        "$ref": "#/definitions/KeyVaultProperties",
        "description": "Properties provided by key vault."
      },
      "identity": {
        "$ref": "#/definitions/EncryptionIdentity",
        "description": "The identity to be used with service-side encryption at rest.",
        "x-ms-client-name": "encryptionIdentity"
      }
    }
  },
  "EncryptionType": {
    "type": "string",
    "description": "The type of key used to encrypt the data of the disk.",
    "enum": [
      "EncryptionAtRestWithPlatformKey",
      "EncryptionAtRestWithCustomerManagedKey"
    ],
    "x-ms-enum": {
      "name": "EncryptionType",
      "modelAsString": true,
      "values": [
        {
          "name": "EncryptionAtRestWithPlatformKey",
          "value": "EncryptionAtRestWithPlatformKey",
          "description": "Volume is encrypted at rest with Platform managed key. It is the default encryption type."
        },
        {
          "name": "EncryptionAtRestWithCustomerManagedKey",
          "value": "EncryptionAtRestWithCustomerManagedKey",
          "description": "Volume is encrypted at rest with Customer managed key that can be changed and revoked by a customer."
        }
      ]
    }
  },
  "Identity": {
    "type": "object",
    "description": "Identity for the resource.",
    "properties": {
      "type": {
        "$ref": "#/definitions/IdentityType",
        "description": "The identity type."
      },
      "userAssignedIdentities": {
        "type": "object",
        "description": "Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this volume group. The key is the ARM resource identifier of the identity.",
        "additionalProperties": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.UserAssignedIdentity"
        }
      }
    }
  },
  "IscsiTargetInfo": {
    "type": "object",
    "description": "Iscsi target information",
    "properties": {
      "targetIqn": {
        "type": "string",
        "description": "iSCSI Target IQN (iSCSI Qualified Name); example: \"iqn.2005-03.org.iscsi:server\".",
        "readOnly": true
      },
      "targetPortalHostname": {
        "type": "string",
        "description": "iSCSI Target Portal Host Name",
        "readOnly": true
      },
      "targetPortalPort": {
        "type": "integer",
        "format": "int32",
        "description": "iSCSI Target Portal Port",
        "readOnly": true
      },
      "provisioningState": {
        "$ref": "#/definitions/ProvisioningStates",
        "description": "State of the operation on the resource.",
        "readOnly": true
      },
      "status": {
        "$ref": "#/definitions/OperationalStatus",
        "description": "Operational status of the iSCSI Target."
      }
    }
  },
  "KeyVaultProperties": {
    "type": "object",
    "description": "Properties of key vault.",
    "properties": {
      "keyName": {
        "type": "string",
        "description": "The name of KeyVault key."
      },
      "keyVersion": {
        "type": "string",
        "description": "The version of KeyVault key."
      },
      "keyVaultUri": {
        "type": "string",
        "description": "The Uri of KeyVault."
      },
      "currentVersionedKeyIdentifier": {
        "type": "string",
        "description": "The object identifier of the current versioned Key Vault Key in use.",
        "readOnly": true
      },
      "lastKeyRotationTimestamp": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp of last rotation of the Key Vault Key.",
        "readOnly": true
      },
      "currentVersionedKeyExpirationTimestamp": {
        "type": "string",
        "format": "date-time",
        "description": "This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.",
        "readOnly": true
      }
    }
  },
  "ManagedByInfo": {
    "type": "object",
    "description": "Parent resource information.",
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "Resource ID of the resource managing the volume, this is a restricted field and can only be set for internal use."
      }
    }
  },
  "NetworkRuleSet": {
    "type": "object",
    "description": "A set of rules governing the network accessibility.",
    "properties": {
      "virtualNetworkRules": {
        "type": "array",
        "description": "The list of virtual network rules.",
        "items": {
          "$ref": "#/definitions/VirtualNetworkRule"
        },
        "x-ms-identifiers": []
      }
    }
  },
  "OperationalStatus": {
    "type": "string",
    "description": "Operational status of the resource.",
    "enum": [
      "Invalid",
      "Unknown",
      "Healthy",
      "Unhealthy",
      "Updating",
      "Running",
      "Stopped",
      "Stopped (deallocated)"
    ],
    "x-ms-enum": {
      "name": "OperationalStatus",
      "modelAsString": true
    }
  },
  "PrivateEndpoint": {
    "type": "object",
    "description": "Response for PrivateEndpoint",
    "properties": {
      "id": {
        "type": "string",
        "description": "The ARM identifier for Private Endpoint",
        "readOnly": true
      }
    }
  },
  "PrivateEndpointConnection": {
    "type": "object",
    "description": " Response for PrivateEndpoint Connection object",
    "properties": {
      "properties": {
        "$ref": "#/definitions/PrivateEndpointConnectionProperties",
        "description": "The resource-specific properties for this resource.",
        "x-ms-client-flatten": true,
        "x-ms-mutability": [
          "read",
          "create"
        ]
      }
    },
    "allOf": [
      {
        "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
      }
    ]
  },
  "PrivateEndpointConnectionListResult": {
    "type": "object",
    "description": "The response of a PrivateEndpointConnection list operation.",
    "properties": {
      "value": {
        "type": "array",
        "description": "The PrivateEndpointConnection items on this page",
        "items": {
          "$ref": "#/definitions/PrivateEndpointConnection"
        }
      },
      "nextLink": {
        "type": "string",
        "format": "uri",
        "description": "The link to the next page of items"
      }
    },
    "required": [
      "value"
    ]
  },
  "PrivateEndpointConnectionProperties": {
    "type": "object",
    "description": " Response for PrivateEndpoint connection properties",
    "properties": {
      "provisioningState": {
        "$ref": "#/definitions/ProvisioningStates",
        "description": "Provisioning State of Private Endpoint connection resource",
        "readOnly": true
      },
      "privateEndpoint": {
        "$ref": "#/definitions/PrivateEndpoint",
        "description": "Private Endpoint resource"
      },
      "privateLinkServiceConnectionState": {
        "$ref": "#/definitions/PrivateLinkServiceConnectionState",
        "description": "Private Link Service Connection State."
      },
      "groupIds": {
        "type": "array",
        "description": " List of resources private endpoint is mapped",
        "items": {
          "type": "string"
        }
      }
    },
    "required": [
      "privateLinkServiceConnectionState"
    ]
  },
  "PrivateEndpointServiceConnectionStatus": {
    "type": "string",
    "description": "The private endpoint connection status.",
    "enum": [
      "Pending",
      "Approved",
      "Failed",
      "Rejected"
    ],
    "x-ms-enum": {
      "name": "PrivateEndpointServiceConnectionStatus",
      "modelAsString": true
    }
  },
  "PrivateLinkResource": {
    "type": "object",
    "description": "A private link resource",
    "properties": {
      "properties": {
        "$ref": "#/definitions/PrivateLinkResourceProperties",
        "description": "Resource properties."
      }
    },
    "allOf": [
      {
        "$ref": "#/definitions/Resource"
      }
    ]
  },
  "PrivateLinkResourceListResult": {
    "type": "object",
    "description": "A list of private link resources",
    "properties": {
      "value": {
        "type": "array",
        "description": "Array of private link resources",
        "items": {
          "$ref": "#/definitions/PrivateLinkResource"
        }
      },
      "nextLink": {
        "type": "string",
        "description": "URI to fetch the next section of the paginated response.",
        "readOnly": true
      }
    }
  },
  "PrivateLinkResourceProperties": {
    "type": "object",
    "description": "Properties of a private link resource.",
    "properties": {
      "groupId": {
        "type": "string",
        "description": "The private link resource group id.",
        "readOnly": true
      },
      "requiredMembers": {
        "type": "array",
        "description": "The private link resource required member names.",
        "items": {
          "type": "string"
        },
        "readOnly": true
      },
      "requiredZoneNames": {
        "type": "array",
        "description": "The private link resource Private link DNS zone name.",
        "items": {
          "type": "string"
        }
      }
    }
  },
  "PrivateLinkServiceConnectionState": {
    "type": "object",
    "description": "Response for Private Link Service Connection state",
    "properties": {
      "status": {
        "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
      },
      "description": {
        "type": "string",
        "description": "The reason for approval/rejection of the connection."
      },
      "actionsRequired": {
        "type": "string",
        "description": "A message indicating if changes on the service provider require any updates on the consumer."
      }
    }
  },
  "Sku": {
    "type": "object",
    "description": "The SKU name. Required for account creation; optional for update.",
    "properties": {
      "name": {
        "$ref": "#/definitions/SkuName",
        "description": "The sku name."
      },
      "tier": {
        "$ref": "#/definitions/Azure.ResourceManager.Foundations.SkuTier",
        "description": "The sku tier."
      }
    },
    "required": [
      "name"
    ]
  },
  "SKUCapability": {
    "type": "object",
    "description": "The capability information in the specified SKU.",
    "properties": {
      "name": {
        "type": "string",
        "description": "The name of capability.",
        "readOnly": true
      },
      "value": {
        "type": "string",
        "description": "A string value to indicate states of given capability.",
        "readOnly": true
      }
    }
  },
  "SkuInformation": {
    "type": "object",
    "description": "ElasticSAN SKU and its properties",
    "properties": {
      "name": {
        "$ref": "#/definitions/SkuName",
        "description": "Sku Name"
      },
      "tier": {
        "$ref": "#/definitions/Azure.ResourceManager.Foundations.SkuTier",
        "description": "Sku Tier"
      },
      "resourceType": {
        "type": "string",
        "description": "The type of the resource.",
        "readOnly": true
      },
      "locations": {
        "type": "array",
        "description": "The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).",
        "items": {
          "type": "string"
        },
        "readOnly": true
      },
      "locationInfo": {
        "type": "array",
        "description": "Availability of the SKU for the location/zone",
        "items": {
          "$ref": "#/definitions/SkuLocationInfo"
        },
        "readOnly": true,
        "x-ms-identifiers": []
      },
      "capabilities": {
        "type": "array",
        "description": "The capability information in the specified SKU.",
        "items": {
          "$ref": "#/definitions/SKUCapability"
        },
        "readOnly": true,
        "x-ms-identifiers": []
      }
    },
    "required": [
      "name"
    ]
  },
  "SkuLocationInfo": {
    "type": "object",
    "description": "The location info.",
    "properties": {
      "location": {
        "type": "string",
        "description": "The location.",
        "readOnly": true
      },
      "zones": {
        "type": "array",
        "description": "The zones.",
        "items": {
          "type": "string"
        },
        "readOnly": true
      }
    }
  },
  "SkuName": {
    "type": "string",
    "description": "The sku name.",
    "enum": [
      "Premium_LRS",
      "Premium_ZRS"
    ],
    "x-ms-enum": {
      "name": "SkuName",
      "modelAsString": true,
      "values": [
        {
          "name": "Premium_LRS",
          "value": "Premium_LRS",
          "description": "Premium locally redundant storage"
        },
        {
          "name": "Premium_ZRS",
          "value": "Premium_ZRS",
          "description": "Premium zone redundant storage"
        }
      ]
    }
  },
  "Snapshot": {
    "type": "object",
    "description": "Response for Volume Snapshot request.",
    "properties": {
      "properties": {
        "$ref": "#/definitions/SnapshotProperties",
        "description": "The resource-specific properties for this resource.",
        "x-ms-client-flatten": true,
        "x-ms-mutability": [
          "read",
          "create"
        ]
      }
    },
    "allOf": [
      {
        "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
      }
    ]
  },
  "SnapshotCreationData": {
    "type": "object",
    "description": "Data used when creating a volume snapshot.",
    "properties": {
      "sourceId": {
        "type": "string",
        "description": "Fully qualified resource ID of the volume. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}\""
      }
    },
    "required": [
      "sourceId"
    ]
  },
  "SnapshotProperties": {
    "type": "object",
    "description": "Properties for Snapshot.",
    "properties": {
      "creationData": {
        "$ref": "#/definitions/SnapshotCreationData",
        "description": "Data used when creating a volume snapshot."
      },
      "provisioningState": {
        "$ref": "#/definitions/ProvisioningStates",
        "description": "State of the operation on the resource.",
        "readOnly": true
      },
      "sourceVolumeSizeGiB": {
        "type": "integer",
        "format": "int32",
        "description": "Size of Source Volume",
        "readOnly": true
      },
      "volumeName": {
        "type": "string",
        "description": "Source Volume Name of a snapshot",
        "readOnly": true
      }
    },
    "required": [
      "creationData"
    ]
  },
  "SourceCreationData": {
    "type": "object",
    "description": "Data source used when creating the volume.",
    "properties": {
      "createSource": {
        "$ref": "#/definitions/VolumeCreateOption",
        "description": "This enumerates the possible sources of a volume creation."
      },
      "sourceId": {
        "type": "string",
        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
      }
    }
  },
  "StorageTargetType": {
    "type": "string",
    "description": "Storage Target type.",
    "enum": [
      "Iscsi",
      "None"
    ],
    "x-ms-enum": {
      "name": "StorageTargetType",
      "modelAsString": true
    }
  },
  "VirtualNetworkRule": {
    "type": "object",
    "description": "Virtual Network rule.",
    "properties": {
      "id": {
        "type": "string",
        "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
        "x-ms-client-name": "virtualNetworkResourceId"
      },
      "action": {
        "$ref": "#/definitions/Action",
        "description": "The action of virtual network rule."
      }
    },
    "required": [
      "id"
    ]
  },
  "Volume": {
    "type": "object",
    "description": "Response for Volume request.",
    "properties": {
      "properties": {
        "$ref": "#/definitions/VolumeProperties",
        "description": "The resource-specific properties for this resource.",
        "x-ms-client-flatten": true,
        "x-ms-mutability": [
          "read",
          "create"
        ]
      }
    },
    "allOf": [
      {
        "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
      }
    ]
  },
  "VolumeGroup": {
    "type": "object",
    "description": "Response for Volume Group request.",
    "properties": {
      "properties": {
        "$ref": "#/definitions/VolumeGroupProperties",
        "description": "The resource-specific properties for this resource.",
        "x-ms-client-flatten": true,
        "x-ms-mutability": [
          "read",
          "create"
        ]
      },
      "identity": {
        "$ref": "#/definitions/Azure.ResourceManager.Foundations.ManagedIdentityProperties",
        "description": "The managed service identities assigned to this resource."
      }
    },
    "allOf": [
      {
        "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
      }
    ]
  },
  "VolumeGroupProperties": {
    "type": "object",
    "description": "VolumeGroup response properties.",
    "properties": {
      "provisioningState": {
        "$ref": "#/definitions/ProvisioningStates",
        "description": "State of the operation on the resource.",
        "readOnly": true
      },
      "protocolType": {
        "$ref": "#/definitions/StorageTargetType",
        "description": "Type of storage target"
      },
      "encryption": {
        "$ref": "#/definitions/EncryptionType",
        "description": "Type of encryption"
      },
      "encryptionProperties": {
        "$ref": "#/definitions/EncryptionProperties",
        "description": "Encryption Properties describing Key Vault and Identity information"
      },
      "networkAcls": {
        "$ref": "#/definitions/NetworkRuleSet",
        "description": "A collection of rules governing the accessibility from specific network locations.",
        "x-ms-mutability": [
          "read",
          "create"
        ]
      },
      "privateEndpointConnections": {
        "type": "array",
        "description": "The list of Private Endpoint Connections.",
        "items": {
          "$ref": "#/definitions/PrivateEndpointConnection"
        },
        "readOnly": true
      }
    }
  },
  "VolumeGroupUpdate": {
    "type": "object",
    "description": "Volume Group request.",
    "properties": {
      "identity": {
        "$ref": "#/definitions/Identity",
        "description": "The identity of the resource."
      },
      "properties": {
        "$ref": "#/definitions/VolumeGroupUpdateProperties",
        "description": "Properties of VolumeGroup."
      }
    }
  },
  "VolumeGroupUpdateProperties": {
    "type": "object",
    "description": "VolumeGroup response properties.",
    "properties": {
      "protocolType": {
        "$ref": "#/definitions/StorageTargetType",
        "description": "Type of storage target"
      },
      "encryption": {
        "$ref": "#/definitions/EncryptionType",
        "description": "Type of encryption"
      },
      "encryptionProperties": {
        "$ref": "#/definitions/EncryptionProperties",
        "description": "Encryption Properties describing Key Vault and Identity information"
      },
      "networkAcls": {
        "$ref": "#/definitions/NetworkRuleSet",
        "description": "A collection of rules governing the accessibility from specific network locations.",
        "x-ms-mutability": [
          "update"
        ]
      }
    }
  },
  "VolumeProperties": {
    "type": "object",
    "description": "Volume response properties.",
    "properties": {
      "volumeId": {
        "type": "string",
        "description": "Unique Id of the volume in GUID format",
        "readOnly": true
      },
      "creationData": {
        "$ref": "#/definitions/SourceCreationData",
        "description": "State of the operation on the resource."
      },
      "sizeGiB": {
        "type": "integer",
        "format": "int32",
        "description": "Volume size."
      },
      "storageTarget": {
        "$ref": "#/definitions/IscsiTargetInfo",
        "description": "Storage target information",
        "readOnly": true
      },
      "managedBy": {
        "$ref": "#/definitions/ManagedByInfo",
        "description": "Parent resource information."
      },
      "provisioningState": {
        "$ref": "#/definitions/ProvisioningStates",
        "description": "State of the operation on the resource.",
        "readOnly": true
      }
    },
    "required": [
      "sizeGiB"
    ]
  },
  "VolumeUpdate": {
    "type": "object",
    "description": "Response for Volume request.",
    "properties": {
      "properties": {
        "$ref": "#/definitions/VolumeUpdateProperties",
        "description": "Properties of Volume."
      }
    }
  },
  "VolumeUpdateProperties": {
    "type": "object",
    "description": "Volume response properties.",
    "properties": {
      "sizeGiB": {
        "type": "integer",
        "format": "int32",
        "description": "Volume size."
      },
      "managedBy": {
        "$ref": "#/definitions/ManagedByInfo",
        "description": "Parent resource information."
      }
    }
  }
}
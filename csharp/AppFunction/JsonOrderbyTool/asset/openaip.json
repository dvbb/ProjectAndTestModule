{
  "/providers/Azure.ResourceManager.CustomerInsights/operations": {
    "get": {
      "operationId": "Operations_List",
      "tags": [
        "Operations"
      ],
      "description": "List the operations for the provider",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.CustomerInsights/hubs": {
    "get": {
      "operationId": "Hubs_List",
      "tags": [
        "Hubs"
      ],
      "description": "Gets all hubs in the specified subscription.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/HubListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs": {
    "get": {
      "operationId": "Hubs_ListByResourceGroup",
      "tags": [
        "Hubs"
      ],
      "description": "Gets all the hubs in a resource group.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/HubListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}": {
    "get": {
      "operationId": "Hubs_Get",
      "tags": [
        "Hubs"
      ],
      "description": "Gets information about the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/Hub"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "Hubs_CreateOrUpdate",
      "tags": [
        "Hubs"
      ],
      "description": "Creates a hub, or updates an existing hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Hub"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'Hub' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/Hub"
          }
        },
        "201": {
          "description": "Resource 'Hub' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/Hub"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "patch": {
      "operationId": "Hubs_Update",
      "tags": [
        "Hubs"
      ],
      "description": "Updates a Hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "properties",
          "in": "body",
          "description": "The resource properties to be updated.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/HubUpdate"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/Hub"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "delete": {
      "operationId": "Hubs_Delete",
      "tags": [
        "Hubs"
      ],
      "description": "Deletes the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/authorizationPolicies": {
    "get": {
      "operationId": "AuthorizationPolicies_ListByHub",
      "tags": [
        "AuthorizationPolicies"
      ],
      "description": "Gets all the authorization policies in a specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/AuthorizationPolicyResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}": {
    "get": {
      "operationId": "AuthorizationPolicies_Get",
      "tags": [
        "AuthorizationPolicies"
      ],
      "description": "Gets an authorization policy in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "authorizationPolicyName",
          "in": "path",
          "description": "The name of the policy.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/AuthorizationPolicyResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "AuthorizationPolicies_CreateOrUpdate",
      "tags": [
        "AuthorizationPolicies"
      ],
      "description": "Creates an authorization policy or updates an existing authorization policy.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "authorizationPolicyName",
          "in": "path",
          "description": "The name of the policy.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/AuthorizationPolicyResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'AuthorizationPolicyResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/AuthorizationPolicyResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'AuthorizationPolicyResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/AuthorizationPolicyResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regeneratePrimaryKey": {
    "post": {
      "operationId": "AuthorizationPolicies_RegeneratePrimaryKey",
      "tags": [
        "AuthorizationPolicies"
      ],
      "description": "Regenerates the primary policy key of the specified authorization policy.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "authorizationPolicyName",
          "in": "path",
          "description": "The name of the policy.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/AuthorizationPolicy"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regenerateSecondaryKey": {
    "post": {
      "operationId": "AuthorizationPolicies_RegenerateSecondaryKey",
      "tags": [
        "AuthorizationPolicies"
      ],
      "description": "Regenerates the secondary policy key of the specified authorization policy.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "authorizationPolicyName",
          "in": "path",
          "description": "The name of the policy.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/AuthorizationPolicy"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/connectors": {
    "get": {
      "operationId": "Connectors_ListByHub",
      "tags": [
        "Connectors"
      ],
      "description": "Gets all the connectors in the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ConnectorResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/connectors/{connectorName}": {
    "get": {
      "operationId": "Connectors_Get",
      "tags": [
        "Connectors"
      ],
      "description": "Gets a connector in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "connectorName",
          "in": "path",
          "description": "The name of the connector.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ConnectorResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "Connectors_CreateOrUpdate",
      "tags": [
        "Connectors"
      ],
      "description": "Creates a connector or updates an existing connector in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "connectorName",
          "in": "path",
          "description": "The name of the connector.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ConnectorResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'ConnectorResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/ConnectorResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'ConnectorResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/ConnectorResourceFormat"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "Connectors_Delete",
      "tags": [
        "Connectors"
      ],
      "description": "Deletes a connector in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "connectorName",
          "in": "path",
          "description": "The name of the connector.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings": {
    "get": {
      "operationId": "ConnectorMappings_ListByConnectorResourceFormat",
      "tags": [
        "ConnectorMappings"
      ],
      "description": "Gets all the connector mappings in the specified connector.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "connectorName",
          "in": "path",
          "description": "The name of the connector.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ConnectorMappingResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}": {
    "get": {
      "operationId": "ConnectorMappings_Get",
      "tags": [
        "ConnectorMappings"
      ],
      "description": "Gets a connector mapping in the connector.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "connectorName",
          "in": "path",
          "description": "The name of the connector.",
          "required": true,
          "type": "string"
        },
        {
          "name": "mappingName",
          "in": "path",
          "description": "The name of the connector mapping.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ConnectorMappingResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "ConnectorMappings_CreateOrUpdate",
      "tags": [
        "ConnectorMappings"
      ],
      "description": "Creates a connector mapping or updates an existing connector mapping in the connector.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "connectorName",
          "in": "path",
          "description": "The name of the connector.",
          "required": true,
          "type": "string"
        },
        {
          "name": "mappingName",
          "in": "path",
          "description": "The name of the connector mapping.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ConnectorMappingResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'ConnectorMappingResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/ConnectorMappingResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'ConnectorMappingResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/ConnectorMappingResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "delete": {
      "operationId": "ConnectorMappings_Delete",
      "tags": [
        "ConnectorMappings"
      ],
      "description": "Deletes a connector mapping in the connector.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "connectorName",
          "in": "path",
          "description": "The name of the connector.",
          "required": true,
          "type": "string"
        },
        {
          "name": "mappingName",
          "in": "path",
          "description": "The name of the connector mapping.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/getUploadUrlForData": {
    "post": {
      "operationId": "Images_GetUploadUrlForData",
      "tags": [
        "Images"
      ],
      "description": "Gets data image upload URL.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "body",
          "in": "body",
          "description": "The content of the action request",
          "required": true,
          "schema": {
            "$ref": "#/definitions/GetImageUploadUrlInput"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ImageDefinition"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/getUploadUrlForEntityType": {
    "post": {
      "operationId": "Images_GetUploadUrlForEntityType",
      "tags": [
        "Images"
      ],
      "description": "Gets entity type (profile or interaction) image upload URL.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "body",
          "in": "body",
          "description": "The content of the action request",
          "required": true,
          "schema": {
            "$ref": "#/definitions/GetImageUploadUrlInput"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ImageDefinition"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/interactions": {
    "get": {
      "operationId": "Interactions_ListByHub",
      "tags": [
        "Interactions"
      ],
      "description": "Gets all interactions in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "locale-code",
          "in": "query",
          "description": "Locale of interaction to retrieve, default is en-us.",
          "required": false,
          "type": "string",
          "default": "en-us"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/InteractionResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/interactions/{interactionName}": {
    "get": {
      "operationId": "Interactions_Get",
      "tags": [
        "Interactions"
      ],
      "description": "Gets information about the specified interaction.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "locale-code",
          "in": "query",
          "description": "Locale of interaction to retrieve, default is en-us.",
          "required": false,
          "type": "string",
          "default": "en-us"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "interactionName",
          "in": "path",
          "description": "The name of the interaction.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/InteractionResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "Interactions_CreateOrUpdate",
      "tags": [
        "Interactions"
      ],
      "description": "Creates an interaction or updates an existing interaction within a hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "interactionName",
          "in": "path",
          "description": "The name of the interaction.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/InteractionResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'InteractionResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/InteractionResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'InteractionResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/InteractionResourceFormat"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/interactions/{interactionName}/suggestRelationshipLinks": {
    "post": {
      "operationId": "Interactions_SuggestRelationshipLinks",
      "tags": [
        "Interactions"
      ],
      "description": "Suggests relationships to create relationship links.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "interactionName",
          "in": "path",
          "description": "The name of the interaction.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/SuggestRelationshipLinksResponse"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/kpi": {
    "get": {
      "operationId": "Kpi_ListByHub",
      "tags": [
        "Kpi"
      ],
      "description": "Gets all the KPIs in the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/KpiResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/kpi/{kpiName}": {
    "get": {
      "operationId": "Kpi_Get",
      "tags": [
        "Kpi"
      ],
      "description": "Gets a KPI in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "kpiName",
          "in": "path",
          "description": "The name of the KPI.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/KpiResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "Kpi_CreateOrUpdate",
      "tags": [
        "Kpi"
      ],
      "description": "Creates a KPI or updates an existing KPI in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "kpiName",
          "in": "path",
          "description": "The name of the KPI.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/KpiResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'KpiResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/KpiResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'KpiResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/KpiResourceFormat"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "Kpi_Delete",
      "tags": [
        "Kpi"
      ],
      "description": "Deletes a KPI in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "kpiName",
          "in": "path",
          "description": "The name of the KPI.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/kpi/{kpiName}/reprocess": {
    "post": {
      "operationId": "Kpi_Reprocess",
      "tags": [
        "Kpi"
      ],
      "description": "Reprocesses the Kpi values of the specified KPI.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "kpiName",
          "in": "path",
          "description": "The name of the KPI.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Action completed successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/links": {
    "get": {
      "operationId": "Links_ListByHub",
      "tags": [
        "Links"
      ],
      "description": "Gets all the links in the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/LinkResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/links/{linkName}": {
    "get": {
      "operationId": "Links_Get",
      "tags": [
        "Links"
      ],
      "description": "Gets a link in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "linkName",
          "in": "path",
          "description": "The name of the link.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/LinkResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "Links_CreateOrUpdate",
      "tags": [
        "Links"
      ],
      "description": "Creates a link or updates an existing link in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "linkName",
          "in": "path",
          "description": "The name of the link.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/LinkResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'LinkResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/LinkResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'LinkResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/LinkResourceFormat"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "Links_Delete",
      "tags": [
        "Links"
      ],
      "description": "Deletes a link in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "linkName",
          "in": "path",
          "description": "The name of the link.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/predictions": {
    "get": {
      "operationId": "Predictions_ListByHub",
      "tags": [
        "Predictions"
      ],
      "description": "Gets all the predictions in the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/PredictionResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/predictions/{predictionName}": {
    "get": {
      "operationId": "Predictions_Get",
      "tags": [
        "Predictions"
      ],
      "description": "Gets a Prediction in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "predictionName",
          "in": "path",
          "description": "The name of the Prediction.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/PredictionResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "Predictions_CreateOrUpdate",
      "tags": [
        "Predictions"
      ],
      "description": "Creates a Prediction or updates an existing Prediction in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "predictionName",
          "in": "path",
          "description": "The name of the Prediction.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/PredictionResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'PredictionResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/PredictionResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'PredictionResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/PredictionResourceFormat"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "Predictions_Delete",
      "tags": [
        "Predictions"
      ],
      "description": "Deletes a Prediction in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "predictionName",
          "in": "path",
          "description": "The name of the Prediction.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getModelStatus": {
    "post": {
      "operationId": "Predictions_GetModelStatus",
      "tags": [
        "Predictions"
      ],
      "description": "Gets model status of the prediction.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "predictionName",
          "in": "path",
          "description": "The name of the Prediction.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/PredictionModelStatus"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getTrainingResults": {
    "post": {
      "operationId": "Predictions_GetTrainingResults",
      "tags": [
        "Predictions"
      ],
      "description": "Gets training results.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "predictionName",
          "in": "path",
          "description": "The name of the Prediction.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/PredictionTrainingResults"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/modelStatus": {
    "post": {
      "operationId": "Predictions_ModelStatus",
      "tags": [
        "Predictions"
      ],
      "description": "Creates or updates the model status of prediction.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "predictionName",
          "in": "path",
          "description": "The name of the Prediction.",
          "required": true,
          "type": "string"
        },
        {
          "name": "body",
          "in": "body",
          "description": "The content of the action request",
          "required": true,
          "schema": {
            "$ref": "#/definitions/PredictionModelStatus"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "ARM operation completed successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/profiles": {
    "get": {
      "operationId": "Profiles_ListByHub",
      "tags": [
        "Profiles"
      ],
      "description": "Gets all profile in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "locale-code",
          "in": "query",
          "description": "Locale of profile to retrieve, default is en-us.",
          "required": false,
          "type": "string",
          "default": "en-us"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ProfileResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/profiles/{profileName}": {
    "get": {
      "operationId": "Profiles_Get",
      "tags": [
        "Profiles"
      ],
      "description": "Gets information about the specified profile.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "locale-code",
          "in": "query",
          "description": "Locale of profile to retrieve, default is en-us.",
          "required": false,
          "type": "string",
          "default": "en-us"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileName",
          "in": "path",
          "description": "The name of the profile.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ProfileResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "Profiles_CreateOrUpdate",
      "tags": [
        "Profiles"
      ],
      "description": "Creates a profile within a Hub, or updates an existing profile.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileName",
          "in": "path",
          "description": "The name of the profile.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ProfileResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'ProfileResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/ProfileResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'ProfileResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/ProfileResourceFormat"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "Profiles_Delete",
      "tags": [
        "Profiles"
      ],
      "description": "Deletes a profile within a hub",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "locale-code",
          "in": "query",
          "description": "Locale of profile to retrieve, default is en-us.",
          "required": false,
          "type": "string",
          "default": "en-us"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileName",
          "in": "path",
          "description": "The name of the profile.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/profiles/{profileName}/getEnrichingKpis": {
    "post": {
      "operationId": "Profiles_GetEnrichingKpis",
      "tags": [
        "Profiles"
      ],
      "description": "Gets the KPIs that enrich the profile Type identified by the supplied name. Enrichment happens through participants of the Interaction on an Interaction KPI and through Relationships for Profile KPIs.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileName",
          "in": "path",
          "description": "The name of the profile.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "ARM operation completed successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/relationshipLinks": {
    "get": {
      "operationId": "RelationshipLinks_ListByHub",
      "tags": [
        "RelationshipLinks"
      ],
      "description": "Gets all relationship links in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/RelationshipLinkResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}": {
    "get": {
      "operationId": "RelationshipLinks_Get",
      "tags": [
        "RelationshipLinks"
      ],
      "description": "Gets information about the specified relationship Link.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "relationshipLinkName",
          "in": "path",
          "description": "The name of the relationship link.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/RelationshipLinkResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "RelationshipLinks_CreateOrUpdate",
      "tags": [
        "RelationshipLinks"
      ],
      "description": "Creates a relationship link or updates an existing relationship link within a hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "relationshipLinkName",
          "in": "path",
          "description": "The name of the relationship link.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/RelationshipLinkResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'RelationshipLinkResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/RelationshipLinkResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'RelationshipLinkResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/RelationshipLinkResourceFormat"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "RelationshipLinks_Delete",
      "tags": [
        "RelationshipLinks"
      ],
      "description": "Deletes a relationship link within a hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "relationshipLinkName",
          "in": "path",
          "description": "The name of the relationship link.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/relationships": {
    "get": {
      "operationId": "Relationships_ListByHub",
      "tags": [
        "Relationships"
      ],
      "description": "Gets all relationships in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/RelationshipResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}": {
    "get": {
      "operationId": "Relationships_Get",
      "tags": [
        "Relationships"
      ],
      "description": "Gets information about the specified relationship.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "relationshipName",
          "in": "path",
          "description": "The name of the relationship.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/RelationshipResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "Relationships_CreateOrUpdate",
      "tags": [
        "Relationships"
      ],
      "description": "Creates a relationship or updates an existing relationship within a hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "relationshipName",
          "in": "path",
          "description": "The name of the relationship.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/RelationshipResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'RelationshipResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/RelationshipResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'RelationshipResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/RelationshipResourceFormat"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "Relationships_Delete",
      "tags": [
        "Relationships"
      ],
      "description": "Deletes a relationship within a hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "relationshipName",
          "in": "path",
          "description": "The name of the relationship.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/roleAssignments": {
    "get": {
      "operationId": "RoleAssignments_ListByHub",
      "tags": [
        "RoleAssignments"
      ],
      "description": "Gets all the role assignments for the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/RoleAssignmentResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}": {
    "get": {
      "operationId": "RoleAssignments_Get",
      "tags": [
        "RoleAssignments"
      ],
      "description": "Gets the role assignment in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "assignmentName",
          "in": "path",
          "description": "The name of the role assignment.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/RoleAssignmentResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "RoleAssignments_CreateOrUpdate",
      "tags": [
        "RoleAssignments"
      ],
      "description": "Creates or updates a role assignment in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "assignmentName",
          "in": "path",
          "description": "The name of the role assignment.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/RoleAssignmentResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'RoleAssignmentResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/RoleAssignmentResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'RoleAssignmentResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/RoleAssignmentResourceFormat"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "RoleAssignments_Delete",
      "tags": [
        "RoleAssignments"
      ],
      "description": "Deletes the role assignment in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "assignmentName",
          "in": "path",
          "description": "The name of the role assignment.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/views": {
    "get": {
      "operationId": "Views_ListByHub",
      "tags": [
        "Views"
      ],
      "description": "Gets all available views for given user in the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "userId",
          "in": "query",
          "description": "The user ID. Use * to retrieve hub level views.",
          "required": true,
          "type": "string"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ViewResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/views/{viewName}": {
    "get": {
      "operationId": "Views_Get",
      "tags": [
        "Views"
      ],
      "description": "Gets a view in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "userId",
          "in": "query",
          "description": "The user ID. Use * to retrieve hub level view.",
          "required": true,
          "type": "string"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "viewName",
          "in": "path",
          "description": "The name of the view.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ViewResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "put": {
      "operationId": "Views_CreateOrUpdate",
      "tags": [
        "Views"
      ],
      "description": "Creates a view or updates an existing view in the hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "viewName",
          "in": "path",
          "description": "The name of the view.",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource",
          "in": "body",
          "description": "Resource create parameters.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ViewResourceFormat"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'ViewResourceFormat' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/ViewResourceFormat"
          }
        },
        "201": {
          "description": "Resource 'ViewResourceFormat' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/ViewResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    },
    "delete": {
      "operationId": "Views_Delete",
      "tags": [
        "Views"
      ],
      "description": "Deletes a view in the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "userId",
          "in": "query",
          "description": "The user ID. Use * to retrieve hub level view.",
          "required": true,
          "type": "string"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "viewName",
          "in": "path",
          "description": "The name of the view.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/widgetTypes": {
    "get": {
      "operationId": "WidgetTypes_ListByHub",
      "tags": [
        "WidgetTypes"
      ],
      "description": "Gets all available widget types in the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/WidgetTypeResourceFormatListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.CustomerInsights/hubs/{hubName}/widgetTypes/{widgetTypeName}": {
    "get": {
      "operationId": "WidgetTypes_Get",
      "tags": [
        "WidgetTypes"
      ],
      "description": "Gets a widget type in the specified hub.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "widgetTypeName",
          "in": "path",
          "description": "The name of the widget type.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/WidgetTypeResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roles/{resourceGroupName}/{hubName}/{subscriptionId}": {
    "get": {
      "operationId": "Roles_ListByHub",
      "tags": [
        "Roles"
      ],
      "description": "Gets all the roles for the hub.",
      "parameters": [
        {
          "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
        },
        {
          "name": "resourceGroupName",
          "in": "path",
          "description": "The name of the resource group.",
          "required": true,
          "type": "string"
        },
        {
          "name": "hubName",
          "in": "path",
          "description": "The name of the hub.",
          "required": true,
          "type": "string"
        },
        {
          "name": "subscriptionId",
          "in": "path",
          "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "The request has succeeded.",
          "schema": {
            "$ref": "#/definitions/PagedRoleResourceFormat"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
          },
          "headers": {
            "x-ms-error-code": {
              "type": "string",
              "description": "String error code indicating what went wrong."
            }
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  }
}
{
  "/providers/Microsoft.ElasticSan/operations": {
    "get": {
      "operationId": "Operations_List",
      "tags": [
        "Operations"
      ],
      "description": "List the operations for the provider",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/elasticSans": {
    "get": {
      "operationId": "ElasticSans_ListBySubscription",
      "tags": [
        "ElasticSans"
      ],
      "description": "Gets a list of ElasticSans in a subscription",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ElasticSanListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "ElasticSans_ListBySubscription_MaximumSet_Gen": {
          "$ref": "./examples/ElasticSans_ListBySubscription_MaximumSet_Gen.json"
        },
        "ElasticSans_ListBySubscription_MinimumSet_Gen": {
          "$ref": "./examples/ElasticSans_ListBySubscription_MinimumSet_Gen.json"
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/providers/Microsoft.ElasticSan/skus": {
    "get": {
      "operationId": "SkusOperations_List",
      "summary": "List all the available Skus in the region and information related to them",
      "description": "List all the available Skus in the region and information related to them",
      "parameters": [
        {
          "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
        },
        {
          "name": "subscriptionId",
          "in": "path",
          "description": "The ID of the target subscription.",
          "required": true,
          "type": "string",
          "minLength": 1
        },
        {
          "name": "$filter",
          "in": "query",
          "description": "Specify $filter='location eq <location>' to filter on location.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "The request has succeeded.",
          "schema": {
            "$ref": "#/definitions/PagedSkuInformation"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
          },
          "headers": {
            "x-ms-error-code": {
              "type": "string",
              "description": "String error code indicating what went wrong."
            }
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans": {
    "get": {
      "operationId": "ElasticSans_ListByResourceGroup",
      "tags": [
        "ElasticSans"
      ],
      "description": "Gets a list of ElasticSan in a resource group.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ElasticSanListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "ElasticSans_ListByResourceGroup_MaximumSet_Gen": {
          "$ref": "./examples/ElasticSans_ListByResourceGroup_MaximumSet_Gen.json"
        },
        "ElasticSans_ListByResourceGroup_MinimumSet_Gen": {
          "$ref": "./examples/ElasticSans_ListByResourceGroup_MinimumSet_Gen.json"
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}": {
    "get": {
      "operationId": "ElasticSans_Get",
      "tags": [
        "ElasticSans"
      ],
      "description": "Get a ElasticSan.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ElasticSan"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "ElasticSans_Get_MaximumSet_Gen": {
          "$ref": "./examples/ElasticSans_Get_MaximumSet_Gen.json"
        },
        "ElasticSans_Get_MinimumSet_Gen": {
          "$ref": "./examples/ElasticSans_Get_MinimumSet_Gen.json"
        }
      }
    },
    "put": {
      "operationId": "ElasticSans_Create",
      "tags": [
        "ElasticSans"
      ],
      "description": "Create ElasticSan.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "parameters",
          "in": "body",
          "description": "Elastic San object.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ElasticSan"
          },
          "x-ms-client-name": "parameters"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'ElasticSan' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/ElasticSan"
          }
        },
        "201": {
          "description": "Resource 'ElasticSan' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/ElasticSan"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "ElasticSans_Create_MaximumSet_Gen": {
          "$ref": "./examples/ElasticSans_Create_MaximumSet_Gen.json"
        },
        "ElasticSans_Create_MinimumSet_Gen": {
          "$ref": "./examples/ElasticSans_Create_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "patch": {
      "operationId": "ElasticSans_Update",
      "tags": [
        "ElasticSans"
      ],
      "description": "Update a Elastic San.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "parameters",
          "in": "body",
          "description": "Elastic San object.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ElasticSanUpdate"
          },
          "x-ms-client-name": "parameters"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/ElasticSan"
          }
        },
        "202": {
          "description": "Resource update request accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "ElasticSans_Update_MaximumSet_Gen": {
          "$ref": "./examples/ElasticSans_Update_MaximumSet_Gen.json"
        },
        "ElasticSans_Update_MinimumSet_Gen": {
          "$ref": "./examples/ElasticSans_Update_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "ElasticSans_Delete",
      "tags": [
        "ElasticSans"
      ],
      "description": "Delete a Elastic San.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "ElasticSans_Delete_MaximumSet_Gen": {
          "$ref": "./examples/ElasticSans_Delete_MaximumSet_Gen.json"
        },
        "ElasticSans_Delete_MinimumSet_Gen": {
          "$ref": "./examples/ElasticSans_Delete_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/privateEndpointConnections": {
    "get": {
      "operationId": "PrivateEndpointConnections_ListByElasticSan",
      "tags": [
        "PrivateEndpointConnections"
      ],
      "description": "List all Private Endpoint Connections associated with the Elastic San.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/PrivateEndpointConnectionListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/privateEndpointConnections/{privateEndpointConnectionName}": {
    "get": {
      "operationId": "PrivateEndpointConnections_Get",
      "tags": [
        "PrivateEndpointConnections"
      ],
      "description": "Gets the specified private endpoint connection associated with the Elastic San",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "privateEndpointConnectionName",
          "in": "path",
          "description": "The name of the Private Endpoint connection.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "PrivateEndpointConnections_Get_MaximumSet_Gen": {
          "$ref": "./examples/PrivateEndpointConnections_Get_MaximumSet_Gen.json"
        },
        "PrivateEndpointConnections_Get_MinimumSet_Gen": {
          "$ref": "./examples/PrivateEndpointConnections_Get_MinimumSet_Gen.json"
        }
      }
    },
    "put": {
      "operationId": "PrivateEndpointConnections_Create",
      "tags": [
        "PrivateEndpointConnections"
      ],
      "description": "Update the state of specified private endpoint connection associated with the Elastic San",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "privateEndpointConnectionName",
          "in": "path",
          "description": "The name of the Private Endpoint connection.",
          "required": true,
          "type": "string"
        },
        {
          "name": "parameters",
          "in": "body",
          "description": "Private Endpoint Connection Approval object.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "x-ms-client-name": "parameters"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "201": {
          "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "PrivateEndpointConnections_Create_MaximumSet_Gen": {
          "$ref": "./examples/PrivateEndpointConnections_Create_MaximumSet_Gen.json"
        },
        "PrivateEndpointConnections_Create_MinimumSet_Gen": {
          "$ref": "./examples/PrivateEndpointConnections_Create_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "PrivateEndpointConnections_Delete",
      "tags": [
        "PrivateEndpointConnections"
      ],
      "description": "Deletes the specified private endpoint connection associated with the Elastic San",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "privateEndpointConnectionName",
          "in": "path",
          "description": "The name of the Private Endpoint connection.",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "PrivateEndpointConnections_Delete_MaximumSet_Gen": {
          "$ref": "./examples/PrivateEndpointConnections_Delete_MaximumSet_Gen.json"
        },
        "PrivateEndpointConnections_Delete_MinimumSet_Gen": {
          "$ref": "./examples/PrivateEndpointConnections_Delete_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/privateLinkResources/{subscriptionId}/{resourceGroupName}/{elasticSanName}": {
    "get": {
      "operationId": "PrivateLinkResources_ListByElasticSan",
      "tags": [
        "ElasticSans"
      ],
      "description": "Gets the private link resources that need to be created for a elastic San.",
      "parameters": [
        {
          "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
        },
        {
          "name": "subscriptionId",
          "in": "path",
          "description": "The ID of the target subscription.",
          "required": true,
          "type": "string",
          "minLength": 1
        },
        {
          "name": "resourceGroupName",
          "in": "path",
          "description": "The name of the resource group. The name is case insensitive.",
          "required": true,
          "type": "string",
          "minLength": 1,
          "maxLength": 90
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "The request has succeeded.",
          "schema": {
            "$ref": "#/definitions/PrivateLinkResourceListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
          },
          "headers": {
            "x-ms-error-code": {
              "type": "string",
              "description": "String error code indicating what went wrong."
            }
          }
        }
      },
      "x-ms-examples": {
        "PrivateLinkResources_ListByElasticSan_MaximumSet_Gen": {
          "$ref": "./examples/PrivateLinkResources_ListByElasticSan_MaximumSet_Gen.json"
        },
        "PrivateLinkResources_ListByElasticSan_MinimumSet_Gen": {
          "$ref": "./examples/PrivateLinkResources_ListByElasticSan_MinimumSet_Gen.json"
        }
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups": {
    "get": {
      "operationId": "VolumeGroups_ListByElasticSan",
      "tags": [
        "VolumeGroups"
      ],
      "description": "List VolumeGroups.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/VolumeGroupListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "VolumeGroups_ListByElasticSan_MaximumSet_Gen": {
          "$ref": "./examples/VolumeGroups_ListByElasticSan_MaximumSet_Gen.json"
        },
        "VolumeGroups_ListByElasticSan_MinimumSet_Gen": {
          "$ref": "./examples/VolumeGroups_ListByElasticSan_MinimumSet_Gen.json"
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}": {
    "get": {
      "operationId": "VolumeGroups_Get",
      "tags": [
        "VolumeGroups"
      ],
      "description": "Get an VolumeGroups.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/VolumeGroup"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "VolumeGroups_Get_MaximumSet_Gen": {
          "$ref": "./examples/VolumeGroups_Get_MaximumSet_Gen.json"
        },
        "VolumeGroups_Get_MinimumSet_Gen": {
          "$ref": "./examples/VolumeGroups_Get_MinimumSet_Gen.json"
        }
      }
    },
    "put": {
      "operationId": "VolumeGroups_Create",
      "tags": [
        "VolumeGroups"
      ],
      "description": "Create a Volume Group.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "parameters",
          "in": "body",
          "description": "Volume Group object.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/VolumeGroup"
          },
          "x-ms-client-name": "parameters"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'VolumeGroup' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/VolumeGroup"
          }
        },
        "201": {
          "description": "Resource 'VolumeGroup' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/VolumeGroup"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "VolumeGroups_Create_MaximumSet_Gen": {
          "$ref": "./examples/VolumeGroups_Create_MaximumSet_Gen.json"
        },
        "VolumeGroups_Create_MinimumSet_Gen": {
          "$ref": "./examples/VolumeGroups_Create_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "patch": {
      "operationId": "VolumeGroups_Update",
      "tags": [
        "VolumeGroups"
      ],
      "description": "Update an VolumeGroup.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "parameters",
          "in": "body",
          "description": "Volume Group object.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/VolumeGroupUpdate"
          },
          "x-ms-client-name": "parameters"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/VolumeGroup"
          }
        },
        "202": {
          "description": "Resource update request accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "VolumeGroups_Update_MaximumSet_Gen": {
          "$ref": "./examples/VolumeGroups_Update_MaximumSet_Gen.json"
        },
        "VolumeGroups_Update_MinimumSet_Gen": {
          "$ref": "./examples/VolumeGroups_Update_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "VolumeGroups_Delete",
      "tags": [
        "VolumeGroups"
      ],
      "description": "Delete an VolumeGroup.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "VolumeGroups_Delete_MaximumSet_Gen": {
          "$ref": "./examples/VolumeGroups_Delete_MaximumSet_Gen.json"
        },
        "VolumeGroups_Delete_MinimumSet_Gen": {
          "$ref": "./examples/VolumeGroups_Delete_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/snapshots": {
    "get": {
      "operationId": "VolumeSnapshots_ListByVolumeGroup",
      "tags": [
        "Snapshots"
      ],
      "description": "List Snapshots in a VolumeGroup or List Snapshots by Volume (name) in a VolumeGroup using filter",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "$filter",
          "in": "query",
          "description": "Specify $filter='volumeName eq <volume name>' to filter on volume.",
          "required": false,
          "type": "string"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/SnapshotListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "VolumeSnapshots_ListByVolumeGroup_MaximumSet_Gen": {
          "$ref": "./examples/VolumeSnapshots_ListByVolumeGroup_MaximumSet_Gen.json"
        },
        "VolumeSnapshots_ListByVolumeGroup_MinimumSet_Gen": {
          "$ref": "./examples/VolumeSnapshots_ListByVolumeGroup_MinimumSet_Gen.json"
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/snapshots/{snapshotName}": {
    "get": {
      "operationId": "VolumeSnapshots_Get",
      "tags": [
        "Snapshots"
      ],
      "description": "Get a Volume Snapshot.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "snapshotName",
          "in": "path",
          "description": "The name of the volume snapshot within the given volume group.",
          "required": true,
          "type": "string",
          "minLength": 1,
          "maxLength": 80,
          "pattern": "^[a-z0-9]+(?:[._-][a-z0-9]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "VolumeSnapshots_Get_MaximumSet_Gen": {
          "$ref": "./examples/VolumeSnapshots_Get_MaximumSet_Gen.json"
        },
        "VolumeSnapshots_Get_MinimumSet_Gen": {
          "$ref": "./examples/VolumeSnapshots_Get_MinimumSet_Gen.json"
        }
      }
    },
    "put": {
      "operationId": "VolumeSnapshots_Create",
      "tags": [
        "Snapshots"
      ],
      "description": "Create a Volume Snapshot.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "snapshotName",
          "in": "path",
          "description": "The name of the volume snapshot within the given volume group.",
          "required": true,
          "type": "string",
          "minLength": 1,
          "maxLength": 80,
          "pattern": "^[a-z0-9]+(?:[._-][a-z0-9]+)*$"
        },
        {
          "name": "parameters",
          "in": "body",
          "description": "Snapshot object.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Snapshot"
          },
          "x-ms-client-name": "parameters"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'Snapshot' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "201": {
          "description": "Resource 'Snapshot' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/Snapshot"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "VolumeSnapshots_Create_MaximumSet_Gen": {
          "$ref": "./examples/VolumeSnapshots_Create_MaximumSet_Gen.json"
        },
        "VolumeSnapshots_Create_MinimumSet_Gen": {
          "$ref": "./examples/VolumeSnapshots_Create_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "VolumeSnapshots_Delete",
      "tags": [
        "Snapshots"
      ],
      "description": "Delete a Volume Snapshot.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "snapshotName",
          "in": "path",
          "description": "The name of the volume snapshot within the given volume group.",
          "required": true,
          "type": "string",
          "minLength": 1,
          "maxLength": 80,
          "pattern": "^[a-z0-9]+(?:[._-][a-z0-9]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "VolumeSnapshots_Delete_MaximumSet_Gen": {
          "$ref": "./examples/VolumeSnapshots_Delete_MaximumSet_Gen.json"
        },
        "VolumeSnapshots_Delete_MinimumSet_Gen": {
          "$ref": "./examples/VolumeSnapshots_Delete_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes": {
    "get": {
      "operationId": "Volumes_ListByVolumeGroup",
      "tags": [
        "Volumes"
      ],
      "description": "List Volumes in a VolumeGroup.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/VolumeListResult"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "Volumes_ListByVolumeGroup_MaximumSet_Gen": {
          "$ref": "./examples/Volumes_ListByVolumeGroup_MaximumSet_Gen.json"
        },
        "Volumes_ListByVolumeGroup_MinimumSet_Gen": {
          "$ref": "./examples/Volumes_ListByVolumeGroup_MinimumSet_Gen.json"
        }
      },
      "x-ms-pageable": {
        "nextLinkName": "nextLink"
      }
    }
  },
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}": {
    "get": {
      "operationId": "Volumes_Get",
      "tags": [
        "Volumes"
      ],
      "description": "Get an Volume.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeName",
          "in": "path",
          "description": "The name of the Volume.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-z0-9]+(-[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/Volume"
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "Volumes_Get_MaximumSet_Gen": {
          "$ref": "./examples/Volumes_Get_MaximumSet_Gen.json"
        },
        "Volumes_Get_MinimumSet_Gen": {
          "$ref": "./examples/Volumes_Get_MinimumSet_Gen.json"
        }
      }
    },
    "put": {
      "operationId": "Volumes_Create",
      "tags": [
        "Volumes"
      ],
      "description": "Create a Volume.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeName",
          "in": "path",
          "description": "The name of the Volume.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-z0-9]+(-[a-z0-9A-Z]+)*$"
        },
        {
          "name": "parameters",
          "in": "body",
          "description": "Volume object.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Volume"
          },
          "x-ms-client-name": "parameters"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource 'Volume' update operation succeeded",
          "schema": {
            "$ref": "#/definitions/Volume"
          }
        },
        "201": {
          "description": "Resource 'Volume' create operation succeeded",
          "schema": {
            "$ref": "#/definitions/Volume"
          },
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "Volumes_Create_MaximumSet_Gen": {
          "$ref": "./examples/Volumes_Create_MaximumSet_Gen.json"
        },
        "Volumes_Create_MinimumSet_Gen": {
          "$ref": "./examples/Volumes_Create_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "azure-async-operation"
      },
      "x-ms-long-running-operation": true
    },
    "patch": {
      "operationId": "Volumes_Update",
      "tags": [
        "Volumes"
      ],
      "description": "Update an Volume.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeName",
          "in": "path",
          "description": "The name of the Volume.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-z0-9]+(-[a-z0-9A-Z]+)*$"
        },
        {
          "name": "parameters",
          "in": "body",
          "description": "Volume object.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/VolumeUpdate"
          },
          "x-ms-client-name": "parameters"
        }
      ],
      "responses": {
        "200": {
          "description": "ARM operation completed successfully.",
          "schema": {
            "$ref": "#/definitions/Volume"
          }
        },
        "202": {
          "description": "Resource update request accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "Volumes_Update_MaximumSet_Gen": {
          "$ref": "./examples/Volumes_Update_MaximumSet_Gen.json"
        },
        "Volumes_Update_MinimumSet_Gen": {
          "$ref": "./examples/Volumes_Update_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    },
    "delete": {
      "operationId": "Volumes_Delete",
      "tags": [
        "Volumes"
      ],
      "description": "Delete an Volume.",
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "name": "x-ms-delete-snapshots",
          "in": "header",
          "description": "Optional, used to delete snapshots under volume. Allowed value are only true or false. Default value is false.",
          "required": false,
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "XMsDeleteSnapshots",
            "modelAsString": true
          }
        },
        {
          "name": "x-ms-force-delete",
          "in": "header",
          "description": "Optional, used to delete volume if active sessions present. Allowed value are only true or false. Default value is false.",
          "required": false,
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "XMsForceDelete",
            "modelAsString": true
          }
        },
        {
          "name": "elasticSanName",
          "in": "path",
          "description": "The name of the ElasticSan.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeGroupName",
          "in": "path",
          "description": "The name of the VolumeGroup.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$"
        },
        {
          "name": "volumeName",
          "in": "path",
          "description": "The name of the Volume.",
          "required": true,
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-z0-9]+(-[a-z0-9A-Z]+)*$"
        }
      ],
      "responses": {
        "200": {
          "description": "Resource deleted successfully."
        },
        "202": {
          "description": "Resource deletion accepted.",
          "headers": {
            "Retry-After": {
              "type": "integer",
              "format": "int32",
              "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
            },
            "Location": {
              "type": "string",
              "description": "The Location header contains the URL where the status of the long running operation can be checked."
            }
          }
        },
        "204": {
          "description": "Resource deleted successfully."
        },
        "default": {
          "description": "An unexpected error response.",
          "schema": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          }
        }
      },
      "x-ms-examples": {
        "Volumes_Delete_MaximumSet_Gen": {
          "$ref": "./examples/Volumes_Delete_MaximumSet_Gen.json"
        },
        "Volumes_Delete_MinimumSet_Gen": {
          "$ref": "./examples/Volumes_Delete_MinimumSet_Gen.json"
        }
      },
      "x-ms-long-running-operation-options": {
        "final-state-via": "location"
      },
      "x-ms-long-running-operation": true
    }
  }
}
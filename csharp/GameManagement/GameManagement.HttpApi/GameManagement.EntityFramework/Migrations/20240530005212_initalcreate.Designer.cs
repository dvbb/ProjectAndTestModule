// <auto-generated />
using System;
using GameManagement.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameManagement.EntityFramework.Migrations
{
    [DbContext(typeof(GameManagementDbContext))]
    [Migration("20240530005212_initalcreate")]
    partial class initalcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameMenagement.Entities.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("classes")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nickname")
                        .IsUnique();

                    b.HasIndex("PlayerId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0464319-1102-4a6b-b25a-600e26d391e3"),
                            DateCreated = new DateTime(2024, 5, 30, 8, 52, 12, 254, DateTimeKind.Local).AddTicks(7502),
                            Level = 99,
                            Nickname = "Code Man",
                            PlayerId = new Guid("621b65a6-6b42-4a1e-b8f6-5866ed523c9c"),
                            classes = "Mage"
                        },
                        new
                        {
                            Id = new Guid("c37e010e-ad34-40e2-8150-95436b1647be"),
                            DateCreated = new DateTime(2024, 5, 30, 8, 52, 12, 254, DateTimeKind.Local).AddTicks(7631),
                            Level = 99,
                            Nickname = "WZ",
                            PlayerId = new Guid("621b65a6-6b42-4a1e-b8f6-5866ed523c9c"),
                            classes = "Warrior"
                        },
                        new
                        {
                            Id = new Guid("8b43ebef-15d7-4f1f-b967-ed665e5eb8e9"),
                            DateCreated = new DateTime(2024, 5, 30, 8, 52, 12, 254, DateTimeKind.Local).AddTicks(7640),
                            Level = 29,
                            Nickname = "asaka",
                            PlayerId = new Guid("621b65a6-6b42-4a1e-b8f6-5866ed523c9c"),
                            classes = "Druid"
                        },
                        new
                        {
                            Id = new Guid("b52284ab-8e59-4d1a-b8e8-cc65af9e20c9"),
                            DateCreated = new DateTime(2024, 5, 30, 8, 52, 12, 254, DateTimeKind.Local).AddTicks(7641),
                            Level = 5,
                            Nickname = "MyWon",
                            PlayerId = new Guid("e5903e63-ce9a-4e42-886a-f4cbf7cff470"),
                            classes = "Mage"
                        },
                        new
                        {
                            Id = new Guid("e07576f4-5ece-418e-a1e0-a401812f5eaa"),
                            DateCreated = new DateTime(2024, 5, 30, 8, 52, 12, 254, DateTimeKind.Local).AddTicks(7644),
                            Level = 95,
                            Nickname = "TBD",
                            PlayerId = new Guid("e5903e63-ce9a-4e42-886a-f4cbf7cff470"),
                            classes = "Wizzard"
                        });
                });

            modelBuilder.Entity("GameMenagement.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Account")
                        .IsUnique();

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = new Guid("621b65a6-6b42-4a1e-b8f6-5866ed523c9c"),
                            Account = "mw2021",
                            AccountType = "Free",
                            DateCreated = new DateTime(2024, 5, 30, 8, 52, 12, 254, DateTimeKind.Local).AddTicks(6634)
                        },
                        new
                        {
                            Id = new Guid("e5903e63-ce9a-4e42-886a-f4cbf7cff470"),
                            Account = "dc2021",
                            AccountType = "Free",
                            DateCreated = new DateTime(2024, 5, 30, 8, 52, 12, 254, DateTimeKind.Local).AddTicks(6645)
                        });
                });

            modelBuilder.Entity("GameMenagement.Entities.Character", b =>
                {
                    b.HasOne("GameMenagement.Entities.Player", "Player")
                        .WithMany("Characters")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameMenagement.Entities.Player", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
